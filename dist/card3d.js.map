{"version":3,"file":"card3d.js","sources":["../src/core/card3d.ts","../src/utils.ts","../src/core/attr-handler.ts","../src/index.ts","../src/core/observer.ts"],"sourcesContent":["import {\n  findCardIndex,\n  parseBooleanAttribute,\n  parseFloatAttrbiutes,\n} from \"utils\";\nimport Config from \"../types/config\";\nimport EventListener from \"../types/eventListener\";\n\nconst Card3dElements: { element: HTMLElement; instance: Card3d }[] = [];\n\nconst defaultConfig = {\n  delta: 10,\n  perspective: 500,\n  startX: 0,\n  startY: 0,\n  glareOpacity: 0.5,\n  axis: \"all\",\n  scale: 1,\n} as const satisfies Config;\n\nclass Card3d {\n  private glareElement: HTMLElement;\n  private focusElement: HTMLElement;\n\n  private gyroOrigin: { x: number; y: number } = null;\n\n  private eventMouseMoove: EventListener<MouseEvent>;\n  private eventMouseOut: EventListener<MouseEvent>;\n  private eventDeviceOrientation: EventListener<DeviceOrientationEvent>;\n\n  constructor(private card3dElement: HTMLElement, public config?: Config) {\n    Card3dElements.push({ element: card3dElement, instance: this });\n\n    if (!this.config) this.config = this.setConfigFromAttributes();\n\n    this.config = Object.assign({}, defaultConfig, this.config);\n\n    if (!this.config.stop) this.start();\n    else this.stop();\n  }\n\n  /**\n   * Update config\n   * @param config\n   */\n  updateConfig(config?: Config) {\n    this.config = config ?? this.setConfigFromAttributes();\n\n    if (this.config.stop) {\n      this.stop();\n    } else {\n      this.stop();\n      this.start();\n    }\n  }\n\n  /**\n   * Set the configuration based on the attributes\n   * @returns\n   */\n  private setConfigFromAttributes(): Config {\n    const attr = this.card3dElement.dataset;\n\n    const fullPageListening = parseBooleanAttribute(\n      attr.card3dFullPageListening\n    );\n    const noReset = parseBooleanAttribute(attr.card3dNoReset);\n    const glare = parseBooleanAttribute(attr.card3dGlare);\n    const reverse = parseBooleanAttribute(attr.card3dReverse);\n    const stop = parseBooleanAttribute(attr.card3dStop);\n    const gyroscopie = parseBooleanAttribute(attr.card3dGyroscopie);\n\n    const delta = parseFloatAttrbiutes(attr.card3dDelta) ?? defaultConfig.delta;\n    const perspective =\n      parseFloatAttrbiutes(attr.card3dPerspective) ?? defaultConfig.perspective;\n    const startX =\n      parseFloatAttrbiutes(attr.card3dStartX) ?? defaultConfig.startX;\n    const startY =\n      parseFloatAttrbiutes(attr.card3dStartY) ?? defaultConfig.startY;\n    const glareOpacity =\n      parseFloatAttrbiutes(attr.card3dGlare) ?? defaultConfig.glareOpacity;\n    const scale = parseFloatAttrbiutes(attr.card3dScale) ?? defaultConfig.scale;\n\n    let axis: Config[\"axis\"] = \"all\";\n    if (attr.card3dAxis === \"x\") {\n      axis = \"x\";\n    } else if (attr.card3dAxis === \"y\") {\n      axis = \"y\";\n    }\n\n    return {\n      gyroscopie,\n      stop,\n      scale,\n      delta,\n      axis,\n      noReset,\n      reverse,\n      fullPageListening,\n      perspective,\n      startX,\n      startY,\n      glare,\n      glareOpacity,\n    };\n  }\n\n  /**\n   * Remove all event listener of the card\n   */\n  private removeEventListener() {\n    this.focusElement.removeEventListener(\"mousemove\", this.eventMouseMoove);\n    this.focusElement.removeEventListener(\"mouseout\", this.eventMouseOut);\n    if (this.config.gyroscopie)\n      window.removeEventListener(\n        \"deviceorientation\",\n        this.eventDeviceOrientation\n      );\n  }\n\n  /**\n   * Set all necessary event listener\n   */\n  private setupEventListener() {\n    this.eventMouseMoove = (event: MouseEvent) => this.mousemove(event);\n    this.eventMouseOut = () => this.mouseout();\n\n    this.focusElement.addEventListener(\"mousemove\", this.eventMouseMoove);\n    if (!this.config.noReset) {\n      this.focusElement.addEventListener(\"mouseout\", this.eventMouseOut);\n    }\n\n    if (this.config.gyroscopie) {\n      this.eventDeviceOrientation = (event: DeviceOrientationEvent) =>\n        this.gyro(event);\n      window.addEventListener(\"deviceorientation\", this.eventDeviceOrientation);\n    }\n  }\n\n  /**\n   * Handle device orientation event\n   * @param event\n   * @returns\n   */\n  private gyro(event: DeviceOrientationEvent) {\n    const rotateZ = event.beta,\n      rotateX = event.gamma;\n\n    if (typeof rotateX !== \"number\" || typeof rotateZ !== \"number\") return;\n\n    this.mousemove({\n      clientY: rotateZ / 45,\n      clientX: rotateX / 45,\n      gyroscopie: true,\n    });\n  }\n\n  /**\n   * Remove the card from the list, set attribute stop and reset it\n   */\n  stop() {\n    const cardIndex = findCardIndex(this.card3dElement);\n    Card3dElements.splice(cardIndex, 1);\n    this.card3dElement.setAttribute(\"data-card3d-stop\", \"true\");\n    this.reset();\n  }\n\n  /**\n   * Reset the card style and remove event listener\n   */\n  reset() {\n    this.card3dElement.style.transform = \"\";\n    this.card3dElement.style.transition = \"\";\n\n    if (this.glareElement) this.glareElement.remove();\n\n    this.removeEventListener();\n  }\n\n  /**\n   * Apply the glare\n   */\n  applyGlare() {\n    this.glareElement = document.createElement(\"span\");\n    this.glareElement.setAttribute(\n      \"style\",\n      `\n        will-change: transform;\n        position: absolute;\n        background-image: linear-gradient(0deg, rgba(255,255,255,0) 0%, rgba(255,255,255,1) 100%);\n        pointer-event: none; \n        transform-origin: 0% 0%;\n        transform: translate(-50%, -50%) rotate(180deg);\n        opacity: 0;\n        z-index: 999;\n        `\n    );\n    this.card3dElement.appendChild(this.glareElement);\n  }\n\n  /**\n   * Init the card by setting event and creating glare effect\n   */\n  start() {\n    this.focusElement = this.config.fullPageListening\n      ? document.body\n      : this.card3dElement;\n\n    this.setupEventListener();\n    if (this.config.glare) this.applyGlare();\n\n    this.card3dElement.style.overflow = \"hidden\";\n    this.card3dElement.style.willChange = \"transform\";\n    this.card3dElement.style.transform = `\n        perspective(500px) \n        rotateX(${this.config.startY}deg) \n        rotateY(${this.config.startX}deg)\n        `;\n  }\n\n  /**\n   * Event that handle all mouse event\n   * @param event\n   * @returns\n   */\n  private mousemove(\n    event:\n      | MouseEvent\n      | { clientX: number; clientY: number; gyroscopie: boolean }\n  ) {\n    if (!this.card3dElement.isConnected || !this.focusElement.isConnected) {\n      this.stop();\n      return;\n    }\n\n    this.card3dElement.style.transition = \"\";\n\n    const config = this.config;\n    const reverse = config.reverse ? 1 : -1;\n\n    const rect = this.card3dElement.getBoundingClientRect();\n\n    const middleWidth = rect.width / 2;\n    const middleHeight = rect.height / 2;\n    const middleX = rect.left + middleWidth;\n    const middleY = rect.top + middleHeight;\n\n    const x = (middleX - event.clientX) * -1;\n    const y = middleY - event.clientY;\n\n    const width =\n      this.focusElement !== this.card3dElement\n        ? window.innerWidth / 2\n        : rect.width / 2;\n    const height =\n      this.focusElement !== this.card3dElement\n        ? window.innerHeight / 2\n        : rect.height / 2;\n\n    let finalX: number = 0,\n      finalY: number = 0;\n\n    if (\"gyroscopie\" in event) {\n      if (!this.gyroOrigin) {\n        this.gyroOrigin = {\n          x: event.clientX,\n          y: event.clientY,\n        };\n      }\n\n      finalX = (this.gyroOrigin.x - event.clientX) * config.delta;\n      finalY = (this.gyroOrigin.y - event.clientY) * config.delta;\n    } else {\n      if (config.axis !== \"y\") {\n        finalX = (x / width) * config.delta;\n      }\n\n      if (config.axis !== \"x\") {\n        finalY = (y / height) * config.delta;\n      }\n    }\n\n    //we update the glare\n    if (config.glare) {\n      const angle =\n        Math.atan2(event.clientX - middleX, -(event.clientY - middleY)) *\n        (180 / Math.PI);\n      const glareSize =\n        (rect.width > rect.height ? rect.width : rect.height) * 2;\n      this.glareElement.style.opacity = config.glareOpacity.toString();\n      this.glareElement.style.left = \"50%\";\n      this.glareElement.style.top = \"50%\";\n      this.glareElement.style.width = glareSize + \"px\";\n      this.glareElement.style.height = glareSize + \"px\";\n      this.glareElement.style.transform = `rotate(${angle}deg) translate(-50%, -50%)`;\n      this.glareElement.style.display = \"block\";\n    }\n\n    //we apply the transformation to the card\n    this.card3dElement.style.transform = `\n        perspective(${config.perspective}px) \n        rotateX(${finalY * reverse}deg) \n        rotateY(${finalX * reverse}deg)\n        scale(${config.scale})\n        `;\n  }\n\n  /**\n   * Event that handle when mouse out of the card\n   * @param event\n   */\n  private mouseout() {\n    this.card3dElement.style.transition = \"0.5s ease\";\n    this.card3dElement.style.transform = \"\";\n    if (this.glareElement) this.glareElement.style.opacity = \"0\";\n  }\n}\n\nexport { Card3d, Card3dElements };\n","import { Card3dElements } from \"core/card3d\";\r\n\r\n/**\r\n * Parse boolean from attribute\r\n * @param str\r\n * @returns\r\n */\r\nfunction parseBooleanAttribute(str: string): boolean {\r\n  return str !== null && str !== undefined && (str === \"\" || str === \"true\");\r\n}\r\n\r\n/**\r\n * Parse float from attribute\r\n * @param str\r\n * @returns\r\n */\r\nfunction parseFloatAttrbiutes(str: string): number {\r\n  const nb = parseFloat(str);\r\n  return isNaN(nb) || typeof nb !== \"number\" ? undefined : nb;\r\n}\r\n\r\n/**\r\n * Find the card index\r\n * @param cardElement\r\n * @returns\r\n */\r\nfunction findCardIndex(cardElement: HTMLElement | Node) {\r\n  return Card3dElements.findIndex((e) => e.element === cardElement);\r\n}\r\n\r\nexport { parseBooleanAttribute, parseFloatAttrbiutes, findCardIndex };\r\n","import { findCardIndex, parseBooleanAttribute } from \"../utils\";\r\nimport { Card3d, Card3dElements } from \"./card3d\";\r\n\r\n/**\r\n * Check the card and create the card\r\n * @param card3dList\r\n * @returns\r\n */\r\nfunction Card3dAttributesHandler(\r\n  card3dList: HTMLElement[] | NodeListOf<HTMLElement>\r\n) {\r\n  for (const card3d of card3dList) {\r\n    const alreadySetup = findCardIndex(card3d) !== -1;\r\n    const isNotCard3d = card3d.dataset?.card3d === undefined;\r\n    const isStopped = parseBooleanAttribute(card3d.dataset?.card3dStop);\r\n\r\n    if (alreadySetup || isStopped || isNotCard3d) continue;\r\n\r\n    new Card3d(card3d);\r\n  }\r\n}\r\n\r\nexport default Card3dAttributesHandler;\r\n","import Card3dObserver from \"core/observer\";\r\nimport Card3dAttributesHandler from \"core/attr-handler\";\r\nimport { Card3d } from \"core/card3d\";\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n  Card3dAttributesHandler(document.querySelectorAll(\"[data-card3d]\"));\r\n  Card3dObserver();\r\n});\r\n\r\nexport default Card3d;\r\n","import { findCardIndex, parseBooleanAttribute } from \"utils\";\r\nimport { Card3dElements } from \"./card3d\";\r\nimport Card3dAttributesHandler from \"./attr-handler\";\r\n\r\n/**\r\n * Create the observer to add new card, remove card or change card on attribute change\r\n */\r\nfunction Card3dObserver() {\r\n  const observerDOM = new MutationObserver(function (mutations) {\r\n    const addedNodes: HTMLElement[] = [];\r\n\r\n    for (const mutation of mutations ?? []) {\r\n      //attributes changed\r\n      if (\r\n        mutation.type === \"attributes\" &&\r\n        mutation.attributeName.includes(\"data-card3d\")\r\n      ) {\r\n        const element = mutation.target as HTMLElement;\r\n        const cardIndex = findCardIndex(element);\r\n\r\n        const isNewCard =\r\n          parseBooleanAttribute(element.dataset?.card3d) && cardIndex === -1;\r\n        const cardAlreadyExist = cardIndex !== -1;\r\n\r\n        if (isNewCard) {\r\n          addedNodes.push(element);\r\n        } else if (cardAlreadyExist) {\r\n          Card3dElements[cardIndex].instance.updateConfig();\r\n        }\r\n      }\r\n\r\n      //added nodes\r\n      for (const addedNode of mutation.addedNodes) {\r\n        addedNodes.push(addedNode as HTMLElement);\r\n      }\r\n\r\n      //removed nodes\r\n      for (const removedNode of mutation.removedNodes) {\r\n        const elementIndex = findCardIndex(removedNode);\r\n        if (elementIndex !== -1) Card3dElements.splice(elementIndex, 1);\r\n      }\r\n    }\r\n\r\n    if (addedNodes.length > 0) Card3dAttributesHandler(addedNodes);\r\n  });\r\n\r\n  observerDOM.observe(window.document.documentElement, {\r\n    childList: true,\r\n    subtree: true,\r\n    attributes: true,\r\n  });\r\n}\r\n\r\nexport default Card3dObserver;\r\n"],"names":["Card3dElements","defaultConfig","delta","perspective","startX","startY","glareOpacity","axis","scale","Card3d","constructor","card3dElement","config","this","gyroOrigin","push","element","instance","setConfigFromAttributes","Object","assign","stop","start","updateConfig","attr","dataset","fullPageListening","parseBooleanAttribute","card3dFullPageListening","noReset","card3dNoReset","glare","card3dGlare","reverse","card3dReverse","card3dStop","gyroscopie","card3dGyroscopie","_a","parseFloatAttrbiutes","card3dDelta","_b","card3dPerspective","_c","card3dStartX","_d","card3dStartY","_e","_f","card3dScale","card3dAxis","removeEventListener","focusElement","eventMouseMoove","eventMouseOut","window","eventDeviceOrientation","setupEventListener","event","mousemove","mouseout","addEventListener","gyro","rotateZ","beta","rotateX","gamma","clientY","clientX","cardIndex","findCardIndex","splice","setAttribute","reset","style","transform","transition","glareElement","remove","applyGlare","document","createElement","appendChild","body","overflow","willChange","isConnected","rect","getBoundingClientRect","middleWidth","width","middleHeight","height","middleX","left","middleY","top","x","y","innerWidth","innerHeight","finalX","finalY","angle","Math","atan2","PI","glareSize","opacity","toString","display","str","nb","parseFloat","isNaN","undefined","cardElement","findIndex","e","Card3dAttributesHandler","card3dList","card3d","alreadySetup","isNotCard3d","isStopped","querySelectorAll","MutationObserver","mutations","addedNodes","mutation","type","attributeName","includes","target","cardAlreadyExist","addedNode","removedNode","removedNodes","elementIndex","length","observe","documentElement","childList","subtree","attributes"],"mappings":"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"}